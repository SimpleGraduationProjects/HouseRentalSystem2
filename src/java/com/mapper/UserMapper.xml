<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.model.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Apr 11 20:22:07 CST .
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="number" jdbcType="VARCHAR" property="number"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="telphone" jdbcType="VARCHAR" property="telphone"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo"/>
        <result column="national_id" jdbcType="INTEGER" property="nationalId"/>
        <result column="education_id" jdbcType="INTEGER" property="educationId"/>
        <result column="institute" jdbcType="VARCHAR" property="institute"/>
        <result column="major" jdbcType="VARCHAR" property="major"/>
    </resultMap>


    <!-- 插入 -->
    <insert id="saveEntity" parameterType="com.model.User">
  	  INSERT INTO user (id, account, password, 
        number, name,
      dept_id, role_id, gender, 
      telphone, address, id_card_no, 
      national_id, education_id, institute, 
      major)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{deptId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, 
      #{telphone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{idCardNo,jdbcType=VARCHAR}, 
      #{nationalId,jdbcType=INTEGER}, #{educationId,jdbcType=INTEGER}, #{institute,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR})
  </insert>

    <!-- 查询列表 -->
    <select id="searchEntity" resultMap="BaseResultMap" parameterType="map">
        SELECT u.id, u.account,
        u.number, CONCAT(dept.name,'-',u.name) AS name, u.account, u.password, u.dept_id, u.gender, u.national_id,
        u.education_id,
        (dept.name) AS deptName, u.role_id, CASE u.gender WHEN 1 THEN "男" WHEN 2 THEN
        "女" END AS genderName,
        u.telphone, u.address, u.id_card_no,
        (SELECT name FROM national WHERE national.id = u.national_id) AS nationalName, (SELECT name FROM education WHERE
        education.id = u.education_id) AS educationName, u.institute,
        major FROM user AS u
        left join dept ON dept.id=u.dept_id
        where 1=1

        <if test="keyword != null and keyword != ''">
            and u.name like CONCAT('%',#{keyword},'%')
        </if>
        <if test="dept_id != null and dept_id != ''">
            and dept_id =#{dept_id}
        </if>
        order by u.id desc

        <if test="(start != null and start != '') or start==0 ">
            <if test=" limit != null and limit != ''">
                limit #{start},#{limit}
            </if>
        </if>


    </select>


    <!-- 统计 获取 总数    用于分页-->
    <select id="count" resultType="int" useCache="false" parameterType="map">
        select count(1) from user where 1=1

        <if test="keyword != null and keyword != ''">
            and user.name like CONCAT('%',#{keyword},'%')
        </if>
        <if test="dept_id != null and dept_id != ''">
            and user.dept_id =#{dept_id}
        </if>

    </select>

    <!-- 通过主键编号获得map对象 -->
    <select id="getEntityById" parameterType="int" resultMap="BaseResultMap">
  	SELECT u.id, u.account, 
       u.number, u.name, u.account, u.password, u.dept_id, u.gender, u.national_id, u.education_id,
      (SELECT name FROM dept WHERE id = u.dept_id) AS deptName, u.role_id, u.gender, CASE u.gender WHEN 1 THEN "男" WHEN 2 THEN "女" END AS genderName,
      (SELECT name FROM national WHERE id = u.national_id) AS nationalName, (SELECT name FROM education WHERE id = u.education_id) AS educationName,
      u.telphone, u.address, u.id_card_no, 
      (SELECT name FROM national WHERE id = u.national_id) AS national, (SELECT name FROM education WHERE id = u.education_id), u.institute, 
      major FROM user AS u
      WHERE u.id = #{id}
  </select>

    <!-- 通过主键删除 -->
    <delete id="deleteEntity" parameterType="int">
  	DELETE FROM user WHERE id = #{id}
  </delete>

    <!-- 更新数据库 -->
    <update id="updateEntity" parameterType="com.model.User">
  	UPDATE user SET account = #{account},  password = #{password},
        name = #{name},
      dept_id = #{deptId},role_id = #{roleId}, gender = #{gender},
      telphone = #{telphone}, address = #{address}, id_card_no=#{idCardNo}, 
      national_id=#{nationalId}, education_id=#{educationId}, institute = #{institute}, 
      major = #{major} WHERE id = #{id}
  </update>

    <!-- 判断登录 -->
    <select id="userLogin" parameterType="map" resultMap="BaseResultMap">
  	SELECT * FROM user WHERE account = #{account} AND password = #{password} AND role_id = #{roleId}
  </select>
</mapper>