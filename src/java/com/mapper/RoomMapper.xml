<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.RoomDao">
    <resultMap id="BaseResultMap" type="com.model.Room">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="floor_id" property="floorId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="house" property="house" jdbcType="VARCHAR"/>
        <result column="unit" property="unit" jdbcType="VARCHAR"/>
        <result column="standard" property="standard" jdbcType="VARCHAR"/>
        <result column="info" property="info" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customer_id" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
    </resultMap>
    <!-- 插入 -->
    <insert id="saveEntity" parameterType="com.model.Room">
    insert into room (id, floor_id, name,
      house, unit, standard,
      info, customer_id, photo)
    values (#{id,jdbcType=INTEGER}, #{floorId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{house,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{standard,jdbcType=VARCHAR},
      #{info,jdbcType=VARCHAR}, #{customer_id,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR})
  </insert>

    <!-- 查询列表 -->
    <select id="searchEntity" resultMap="BaseResultMap" parameterType="map">
        SELECT room.*,CONCAT(floor.name,'-',unit,'-',house ) as allname, floor.name AS floorName, customer.name AS customerName
        FROM room
        LEFT JOIN floor on floor.id = room.floor_id
        LEFT JOIN customer on customer.id = room.customer_id
        where 1=1
        <if test="keyword != null and keyword != ''">
            and
            (
            customer.name like CONCAT('%',#{keyword},'%') or
            room.name like CONCAT('%',#{keyword},'%') or
            room.house like CONCAT('%',#{keyword},'%') or
            room.standard like CONCAT('%',#{keyword},'%') or
            room.info like CONCAT('%',#{keyword},'%')
            )
        </if>
        <if test="floor_id != null and floor_id != '' and floor_id >0">
            and floor_id =#{floor_id}
        </if>
        <if test="customer_id != null and customer_id != ''">
            and customer_id =#{customer_id}
        </if>
        <if test="customerISNOTNULL != null and customerISNOTNULL != ''">
            and (customer_id != null or customer_id != 0)
        </if>

        ORDER BY room.id desc

        <if test="(start != null and start != '') or start==0 ">
            <if test=" limit != null and limit != ''">
                limit #{start},#{limit}
            </if>
        </if>

    </select>


    <!-- 统计 获取 总数    用于分页-->
    <select id="count" resultType="int" useCache="false" parameterType="map">
        SELECT count(1)
        FROM room
        LEFT JOIN floor on floor.id = room.floor_id
        LEFT JOIN customer on customer.id = room.customer_id
        where 1=1
        <if test="keyword != null and keyword != ''">
            and
            (
            customer.name like CONCAT('%',#{keyword},'%') or
            room.name like CONCAT('%',#{keyword},'%') or
            room.house like CONCAT('%',#{keyword},'%') or
            room.standard like CONCAT('%',#{keyword},'%') or
            room.info like CONCAT('%',#{keyword},'%')
            )
        </if>
        <if test="floor_id != null and floor_id != '' and floor_id >0">
            and floor_id =#{floor_id}
        </if>
        <if test="customer_id != null and customer_id != ''">
            and customer_id =#{customer_id}
        </if>


    </select>

    <!-- 通过主键编号获得map对象 -->
    <select id="getEntityById" parameterType="int" resultMap="BaseResultMap">
  	    SELECT room.*,  floor.name AS floorName,   customer.name AS customerName
    FROM room
    LEFT JOIN floor on  floor.id = room.floor_id
            LEFT JOIN customer on customer.id = room.customer_id

   WHERE room.id = #{id}
  </select>

    <!-- 通过主键删除 -->
    <delete id="deleteEntity" parameterType="int">
  	DELETE FROM room WHERE id = #{id}
  </delete>

    <!-- 更新数据库 -->
    <update id="updateEntity" parameterType="com.model.Room">
    update room set
     floor_id = #{floorId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      house = #{house,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      standard = #{standard,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      customer_id = #{customer_id,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR}
      where id = #{id}
  </update>

<!--退租-->


    <update id="updateRoomDeleteCustomer" parameterType="java.lang.Integer">
    update room set
      customer_id = 0
      where id = #{id}
  </update>

</mapper>